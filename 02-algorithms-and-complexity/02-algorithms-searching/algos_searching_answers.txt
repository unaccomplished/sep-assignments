1. Given the alphabetically sorted collection in this checkpoint, how many
iterations would it take to find the value G using linear search?

7 iterations

2. Given the alphabetically sorted collection in this checkpoint, how many
iterations would it take to find the value G using binary search?

3 iterations

3. Calculate fib(10), fib(11), fib(12) by hand.

fib(0) = 0
fib(1) = 1
fib(2) = 0 + 1 = 1
fib(3) = 1 + 1 = 2
fib(4) = 2 + 1 = 3
fib(5) = 3 + 2 = 5
fib(6) = 5 + 3 = 8
fib(7) = 8 + 5 = 13
fib(8) = 13 + 8 = 21
fib(9) = 21 + 13 = 34
fib(10) = 34 + 21 = 55
fib(11) = 55 + 34 = 89
fib(12) = 89 + 55 = 144

---
Compare the time it takes to run fib(20) between the Fibonacci
iterative solution and recursive solutions:

                        user     system      total        real
Fibonacci Iterative:   0.000000   0.000000   0.000000 (  0.000018)
Fibonacci Recursive:   0.000000   0.000000   0.000000 (  0.002318)


1. Given an unsorted collection of a million items, which algorithm would you
choose between linear search and binary search? Would you use an iterative or
recursive solution? Explain your reasoning.

I would choose linear search because a binary search would not work with an
unsorted collection. I would also use an iterative solution since that seems to
find the solution faster than recursive solution.

2. Given a sorted collection of a million items, which algorithm would you choose
between linear search and binary search? Would you use an iterative or
recursive solution? Explain your reasoning.

I would choose a binary search as that should find a collection with fewer
iterations than iterative search would on a sorted collection. I would also use
iterative solution since that seems to find the solution faster than recursive
solution.
